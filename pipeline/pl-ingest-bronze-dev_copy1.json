{
	"name": "pl-ingest-bronze-dev_copy1",
	"properties": {
		"activities": [
			{
				"name": "CreditRepoFilesList",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CreditRepoFilesList_ds",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "foreach_csv_files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "CreditRepoFilesList",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('CreditRepoFilesList').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "check_valid_file",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(\n    not(equals(item().file_name, 'application_test.csv')),\n    and(\n        not(equals(item().file_name, 'sample_submission.csv')),\n        not(equals(item().file_name, 'bureau.csv'))\n    )\n)\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "copy_valid_csv_file",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "HttpReadSettings",
													"requestMethod": "GET"
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "CopySource",
												"type": "DatasetReference",
												"parameters": {
													"githubRelativeUrl": {
														"value": "@item().csv_relative_url",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "SinkCopy",
												"type": "DatasetReference",
												"parameters": {
													"FileName": {
														"value": "@item().file_name",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-07-23T09:56:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}